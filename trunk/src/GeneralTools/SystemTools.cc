#include "SystemTools.h"

#include <iostream>
#include <cstring>
#include <cstdlib>
#include <cstdio>


using std::ifstream;
using std::ofstream;
using std::ios;
using std::cout;
using std::endl;

// execute command and return input as a c-string
// cmd = command
// return = command-line output
string RetrieveOutputFromSystemCommand(string cmd) {
  string Data;
  FILE *Stream;
  int MAX_BUFFER = 256;
  char Buffer[MAX_BUFFER];
  cmd.append(" 2>&1");
  Stream = popen(cmd.c_str(), "r");
  if (!Stream){
    exit(1);
  }
  while (fgets(Buffer, MAX_BUFFER, Stream) != NULL) 
    Data.append(Buffer);

  if (ferror(Stream))
    {
      cout << "Error occured when processing command: "<<cmd<<endl;
      return string();
    }
  pclose(Stream);
  
  return Data;
}


// execute command and return first line of output
// cmd = command
// return = command-line output
char* GetLineOutputFromSystemCommand(char* cmd)
{
  FILE *Stream;
  int MAX_BUFFER = 0xffff;
  char Buffer[MAX_BUFFER];
  Stream = popen(cmd, "r");
  if (!Stream){
    cout << "Error: Could not execute command "<<cmd<<endl;
    exit(1);
  }
  if (fgets(Buffer, MAX_BUFFER, Stream) == NULL)
    {
      cout << "No output generated by command"<<endl;
      return 0;
    }
  pclose(Stream);
  int Length = strlen(Buffer);
  if (Buffer[Length-1]=='\n')
    {
      Buffer[Length-1]='\0';
      --Length;
    }
  char *Result = new char[Length+1];
  strcpy(Result,Buffer);
  return Result;
}
