<html>
  <head>
    <title>ParticleOnTorusWithMagneticTranslations</title>
  </head>

  <body>
    <H1><DIV align=center>Class : ParticleOnTorusWithMagneticTranslations</DIV></H1>

<DIV ALIGN="CENTER">class deriving from <A HREF="/home/regnault/development/Physics/DiagHam/docs/HilbertSpace/AbstractHilbertSpace.html">AbstractHilbertSpace</A></DIV><BR>
<H3>~ParticleOnTorusWithMagneticTranslations :</H3>
<u>prototype:</u>     <i>virtual</i> ~ParticleOnTorusWithMagneticTranslations  ()<BR><BR>
<u>description:</u>virtual destructor 
<BR>
<BR><BR><BR><H3>GetParticleStatistic :</H3>
<u>prototype:</u>     <i>virtual</i> int GetParticleStatistic  ()<BR><BR>
<u>description:</u>get the particle statistic  
<BR><BR><BR>
<u>input parameters:</u>
<BR><BR><BR>
<u>return value:</u> particle statistic 
<BR>
<BR><BR><BR><H3>AdAdAA :</H3>
<u>prototype:</u>     <i>virtual</i> int AdAdAA  (int , int , int , int , int , double& , int& nbrTranslation )<BR><BR>
<u>description:</u>apply a^+_m1 a^+_m2 a_n1 a_n2 operator to a given state (with m1+m2=n1+n2) 
<BR><BR><BR>
<u>input parameters:</u>
<BR>index = index of the state on which the operator has to be applied 
<BR>m1 = first index for creation operator 
<BR>m2 = second index for creation operator 
<BR>n1 = first index for annihilation operator 
<BR>n2 = second index for annihilation operator 
<BR>coefficient = reference on the double where the multiplicative factor has to be stored 
<BR>nbrTranslation = reference on the number of translations to applied to the resulting state to obtain the return orbit describing state 
<BR><BR><BR>
<u>return value:</u> index of the destination state  
<BR>
<BR><BR><BR><H3>A :</H3>
<u>prototype:</u>     <A HREF="/home/regnault/development/Physics/DiagHam/docs/Matrix/Matrix.html">Matrix</A>& A  (int , <A HREF="/home/regnault/development/Physics/DiagHam/docs/Matrix/Matrix.html">Matrix</A>& M )<BR><BR>
<u>description:</u>return matrix representation of the annihilation operator a_i 
<BR><BR><BR>
<u>input parameters:</u>
<BR>i = operator index 
<BR>M = matrix where representation has to be stored 
<BR><BR><BR>
<u>return value:</u> corresponding matrix 
<BR>
<BR><BR><BR><H3>Ad :</H3>
<u>prototype:</u>     <A HREF="/home/regnault/development/Physics/DiagHam/docs/Matrix/Matrix.html">Matrix</A>& Ad  (int , <A HREF="/home/regnault/development/Physics/DiagHam/docs/Matrix/Matrix.html">Matrix</A>& M )<BR><BR>
<u>description:</u>return matrix representation ofthw creation operator a^+_i 
<BR><BR><BR>
<u>input parameters:</u>
<BR>i = operator index 
<BR>M = matrix where representation has to be stored 
<BR><BR><BR>
<u>return value:</u> corresponding matrix 
<BR>
<BR><BR><BR>	Back to <A HREF="/home/regnault/development/Physics/DiagHam/docs/index.html">index</A>. 

  </body>
</html>
